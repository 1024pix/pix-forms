name: Build & Deploy images
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v4

      - name: Set variables
        id: vars
        run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT && echo "repo_name=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCW_CONTAINER_REGISTRY_INFRA_SECRET_KEY }}
          registry: ${{ secrets.CONTAINER_REGISTRY_SCW_INFRA_ENDPOINT }}

      - uses: imjasonh/setup-crane@v0.3

      - name: Get next version
        id: semver
        run: |
          REGISTRY="rg.fr-par.scw.cloud"
          REPO="${{ steps.vars.outputs.repo_name }}"
          
          echo "${{ secrets.SCW_CONTAINER_REGISTRY_INFRA_SECRET_KEY }}" | crane auth login $REGISTRY --username nologin --password-stdin
          
          TAGS=$(crane ls ${{ secrets.CONTAINER_REGISTRY_SCW_INFRA_ENDPOINT }}/${REPO} | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' || echo "")
          
          if [ -z "$TAGS" ]; then
            echo "version=0.1.0" >> $GITHUB_OUTPUT
          else
            LATEST=$(echo "$TAGS" | sort -t. -k1,1n -k2,2n -k3,3n | tail -n1)
            MAJOR=$(echo "$LATEST" | cut -d. -f1)
            MINOR=$(echo "$LATEST" | cut -d. -f2)
            echo "version=${MAJOR}.$((MINOR + 1)).0" >> $GITHUB_OUTPUT
          fi
        
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.CONTAINER_REGISTRY_SCW_INFRA_ENDPOINT }}/${{ steps.vars.outputs.repo_name }}:latest
            ${{ secrets.CONTAINER_REGISTRY_SCW_INFRA_ENDPOINT }}/${{ steps.vars.outputs.repo_name }}:${{ steps.semver.outputs.version }}
          cache-from: |
            type=local,src=${{ runner.temp }}/.buildx-cache
            type=registry,ref=${{ secrets.CONTAINER_REGISTRY_SCW_INFRA_ENDPOINT }}/${{ steps.vars.outputs.repo_name }}:latest
          cache-to: type=local,dest=${{ runner.temp }}/.buildx-cache-new,mode=max
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          provenance: false
            
      - name: Move cache
        run: |
          rm -rf ${{ runner.temp }}/.buildx-cache
          mv ${{ runner.temp }}/.buildx-cache-new ${{ runner.temp }}/.buildx-cache